import requests
from datetime import datetime

# Replace this with the actual API endpoint or use web scraping
API_URL = "https://www.euroleaguebasketball.net/euroleague/teams/zalgiris-kaunas/games/zal/"  # This is just an example URL; use the relevant API for Kaunas Žalgiris.

# Add your API Key (if the service requires it)
API_KEY = "your_api_key"

# Your Discord webhook URL (replace with your actual webhook URL)
WEBHOOK_URL = "https://discord.com/api/webhooks/1318732693445410816/xFZbKLLOTfdq-iy_RUxlIRnwbew3uLd8atDZUAN2BrmkRL8mHkkCAQZtIB8b8uxvHzOt"

headers = {
    "User-Agent": "Mozilla/5.0",
    "Authorization": f"Bearer {API_KEY}"
}

# Function to fetch upcoming games
def fetch_upcoming_games():
    response = requests.get(API_URL, headers=headers)

    if response.status_code == 200:
        games = response.json()  # Assuming the API returns JSON data with the schedule
        upcoming_games = []
        
        # Iterate through games and filter for Kaunas Žalgiris games
        for game in games:
            if 'Kaunas' in game['teams']['home']['name'] or 'Kaunas' in game['teams']['away']['name']:
                game_time = datetime.fromisoformat(game['date'])  # Adjust this based on API response structure
                upcoming_games.append({
                    "team_home": game['teams']['home']['name'],
                    "team_away": game['teams']['away']['name'],
                    "date_time": game_time.strftime("%Y-%m-%d %H:%M:%S"),
                    "location": game['location']  # Adjust as per API response
                })

        return upcoming_games
    else:
        print(f"Error fetching games: {response.status_code}")
        return []

# Function to send message to Discord Webhook
def send_to_discord(games):
    for game in games:
        message = {
            "content": f"Upcoming Kaunas Žalgiris Game:\n"
                       f"{game['team_home']} vs {game['team_away']}\n"
                       f"Date: {game['date_time']}\n"
                       f"Location: {game['location']}\n"
                       "----------------------------------"
        }
        # Send the message to the Discord webhook
        response = requests.post(WEBHOOK_URL, json=message)

        if response.status_code == 204:
            print(f"Successfully sent game to Discord: {game['team_home']} vs {game['team_away']}")
        else:
            print(f"Failed to send game to Discord: {response.status_code}")

# Main function to fetch and send upcoming games to Discord
def main():
    games = fetch_upcoming_games()

    if games:
        send_to_discord(games)
    else:
        print("No upcoming games found.")

# Run the function
main()
